{% extends 'base-admin.html.twig' %}

{% block title %}{{ 'List Requests'|trans }}{% endblock %}

{% block page_title %}
    {{ 'List Requests'|trans }}
{% endblock %}

{% block body %}
<!-- users list start -->
<div class="container-fluid">
    <!-- list section start -->
    <div class="card">

        <div class="card-datatable overflow-inherit table-responsive card-body">
            {% include 'extra/filter_limit.html.twig' %}
            <table class="user-list-table table">
                <thead class="thead-light">
                <tr>
                    <th>
                        <a href="{{ filterService.orderBy("name", filterService.getInversedOrder("name")) }}">
                            {{ 'Name'|trans }} {% if filterService.isOrdered("name") %}<i data-feather="{{ filterService.getOrder("name").order == 'asc' ? 'arrow-up' : 'arrow-down' }}"></i>{% endif %}
                        </a>
                    </th>
                    <th>
                        <a href="{{ filterService.orderBy("surnames", filterService.getInversedOrder("surnames")) }}">
                            {{ 'Surnames'|trans }} {% if filterService.isOrdered("surnames") %}<i data-feather="{{ filterService.getOrder("surnames").order == 'asc' ? 'arrow-up' : 'arrow-down' }}"></i>{% endif %}
                        </a>
                    </th>
                    <th>
                        <a href="{{ filterService.orderBy("phone1", filterService.getInversedOrder("phone1")) }}">
                            {{ 'Phone'|trans }} {% if filterService.isOrdered("phone") %}<i data-feather="{{ filterService.getOrder("phone").order == 'asc' ? 'arrow-up' : 'arrow-down' }}"></i>{% endif %}
                        </a>
                    </th>
                    <th>
                        <a href="{{ filterService.orderBy("email", filterService.getInversedOrder("email")) }}">
                            {{ 'Email'|trans }} {% if filterService.isOrdered("email") %}<i data-feather="{{ filterService.getOrder("email").order == 'asc' ? 'arrow-up' : 'arrow-down' }}"></i>{% endif %}
                        </a>
                    </th>
                    <th>
                        <a href="{{ filterService.orderBy("paid", filterService.getInversedOrder("paid")) }}">
                            {{ 'Paid'|trans }} {% if filterService.isOrdered("paid") %}<i data-feather="{{ filterService.getOrder("paid").order == 'asc' ? 'arrow-up' : 'arrow-down' }}"></i>{% endif %}
                        </a>
                    </th>
                    <th>
                        <a href="{{ filterService.orderBy("status", filterService.getInversedOrder("status")) }}">
                            {{ 'Status'|trans }} {% if filterService.isOrdered("status") %}<i data-feather="{{ filterService.getOrder("status").order == 'asc' ? 'arrow-up' : 'arrow-down' }}"></i>{% endif %}
                        </a>
                    </th>
                    <th>
                        <a href="{{ filterService.orderBy("created_at", filterService.getInversedOrder("created_at")) }}">
                            {{ 'Creation Date'|trans }} {% if filterService.isOrdered("created_at") %}<i data-feather="{{ filterService.getOrder("created_at").order == 'asc' ? 'arrow-up' : 'arrow-down' }}"></i>{% endif %}
                        </a>
                    </th>
                    <th>
                        <a>
                            {{ 'Actions'|trans }}
                        </a>
                    </th>
                </tr>
                </thead>
                <tbody>
                {% for clientRequest in clientRequests %}
                    <tr>
                        <td><a href="{{ path('client_request_show', {'clientRequest': clientRequest.id}) }}">{{ clientRequest.name }}</a></td>
                        <td>{{ clientRequest.surnames }}</td>
                        <td>{{ clientRequest.phone }}
                        <td>{{ clientRequest.email }}</td>
                        <td>{% if clientRequest.paid == true %}<span class="badge badge-light-success">{{ 'Paid'|trans }}</span>{% else %}<span class="badge badge-light-danger">{{ 'Unpaid'|trans }}</span>{% endif %}</td>
                        <td>
                            <span class="badge  text-white" style="background-color: {{ clientRequest.status.color }} !important"> {{ clientRequest.status.name|trans }} </span>
                        </td>
                        <td>
                            {{ clientRequest.createdAt|UTCDateTimeFormat('H:i:s d-m-Y') }}
                        </td>
                        <td>
                            <div class="dropdown-basic ">
                                <div class="dropdown">
                                    <button class="dropbtn bg-transparent text-dark p-0 m-0" type="button" data-bs-original-title="" title="">
                                        <i data-feather='align-justify'></i>
                                    </button>
                                    <div class="dropdown-content " style="top: 20px">
                                        {% if userPermission.can('show', 'requests') %}
                                            <a href="{{ path('client_request_show', {'clientRequest': clientRequest.id}) }}"><i class="align-middle" data-feather='eye'></i><span class="ms-1 align-middle"> {{ 'Show'|trans }}</span></a>
                                        {% endif %}
                                        {% if userPermission.can('edit', 'requests') %}
                                            <a href="{{ path('client_request_edit', {'clientRequest': clientRequest.id}) }}"><i class="align-middle" data-feather='edit'></i> <span class="align-middle"> {{ 'Edit'|trans }}</span></a>
                                        {% endif %}
                                        {% if userPermission.can('validate', 'requests') %}
                                            <a href="#" onclick="validate('{{ clientRequest.id }}')"><i class="align-middle" data-feather='check-circle'></i><span class="align-middle"> {{ 'Validate'|trans }}</span></a>
                                        {% endif %}
                                        {% if userPermission.can('change_status', 'requests') %}
                                            <a href="#" onclick="changeStatus('{{ clientRequest.id }}')"><i class="align-middle" data-feather='refresh-cw'></i><span class="align-middle"> {{ 'Change Status'|trans }}</span></a>
                                        {% endif %}
                                        {% if userPermission.can('delete', 'requests') %}
                                            <div class="dropdown-divider"></div>
                                            <a href="#" onclick="$('#deleteForm_request_{{ clientRequest.id }}').submit()"><i class="align-middle" data-feather='delete'></i><span class="align-middle"> {{ 'Delete'|trans }}</span></a>
                                            <form method="post" id="deleteForm_request_{{ clientRequest.id }}" action="{{ path('client_request_delete', {'clientRequest': clientRequest.id}) }}" class="d-none deleteForm" >
                                                <input type="hidden" name="_method" value="DELETE">
                                                <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ clientRequest.id) }}">
                                            </form>
                                        {% endif %}
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                {% else %}
                    <tr>
                        <td colspan="8">{{ 'No results found'|trans }}</td>
                    </tr>
                {% endfor %}
                </tbody>

            </table>
            <div class="d-flex justify-content-end mr-4 mt-2">
                {% include 'extra/pagination.html.twig' with {
                    filterService: filterService,
                    currentPage: filterService.page,
                    paginationPath: 'request_index',
                    lastPage: lastPage,
                    showAlwaysFirstAndLast: true
                } only %}
            </div>
        </div>
    </div>
    <!-- list section end -->
</div>

{% endblock %}

{% block action_buttons %}

    <li class="level-menu outside">

        {% if app.user.isAdmin() %}
            <a class="nav-link cursor-pointer mr-1" id="shareButton">
                <i class="ficon" data-feather="clipboard"></i>
            </a>
        {% endif %}

        <a class="nav-link cursor-pointer mr-1" href="#" onclick="toggleFilter()" >
            <i data-feather="filter"></i>
        </a>
    </li>

{% endblock %}

{% block javascripts %}

<script>
    $('#shareButton').on('click', function (){

        let htmlCode = `
                            <iframe style="width:100% !important; min-width:600px; min-height:600px" title="{{ 'Appointment Form'|trans }}" src="{{ absolute_url(path('public_request_render_new')) }}">
                        `;

        navigator.clipboard.writeText(htmlCode)

        Swal.fire(
            '{{ 'Copied'|trans }}!',
            '{{ 'You have copied the source code to insert the public link to the quotation form'|trans }}',
            'success'
        )
    })

    async function validate(id){
        const { value: userId } = await Swal.fire({
            title: '{{ 'Validate'|trans }}',
            html:
                '<p>{{ ('To validate the request, you must select a ' ~ configuration.user_nomenclature ~ ' to whom this ' ~ configuration.client_nomenclature ~ ' will be assigned')|trans }}</p>' +
                '<div class="form-group">' +
                '<select class="form-control" id="swal-input-select">' +
                    {% for user in users %}
                '<option value="{{ user.id }}" >{{ user.fullName|trans }}</option>' +
                    {% endfor %}
                '</select>' +
                '</div>'
            ,
            showCancelButton: true,
            confirmButtonText: '{{ 'Continue'|trans }}',
            cancelButtonText: '{{ 'Cancel'|trans }}',
            showLoaderOnConfirm: true,
            didOpen: function () {
                $('#swal-input-select').select2({});
            },
            preConfirm: () => {
                return $('#swal-input-select').val();
            }
        })

        if (userId) {

            let form = document.createElement("form");

            form.method =  "post";
            form.id = "changeStatusRequest";

            form.action = "{{ path('client_request_validate') }}/"+ id  ;

            let token = document.createElement("input");
            token.type = "hidden";
            token.name = "_token";
            token.value = "{{ csrf_token('validate-client-request') }}";

            let user = document.createElement("input");
            user.type = "hidden";
            user.name = "user";
            user.value = userId;

            form.appendChild(token);
            form.appendChild(user);
            document.body.appendChild(form);

            form.submit()

        }
    }

    async function changeStatus(id){
        const { value: statusId } = await Swal.fire({
            title: '{{ 'Change Status'|trans }}',
            html:
                '<div class="form-group">' +
                '<select class="form-control" id="swal-input-select">' +
                    {% for status in statuses %}
                '<option value="{{ status.id }}" >{{ status.name|trans }}</option>' +
                    {% endfor %}
                '</select>' +
                '</div>'
            ,
            showCancelButton: true,
            confirmButtonText: '{{ 'Continue'|trans }}',
            cancelButtonText: '{{ 'Cancel'|trans }}',
            showLoaderOnConfirm: true,
            didOpen: function () {
                $('#swal-input-select').select2({});
            },
            preConfirm: () => {
                return $('#swal-input-select').val();
            }
        })

        if (statusId) {

            let form = document.createElement("form");

            form.method =  "post";
            form.id = "changeStatusRequest";

            form.action = "{{ path('client_request_change_status') }}/"+ id  ;

            let token = document.createElement("input");
            token.type = "hidden";
            token.name = "_token";
            token.value = "{{ csrf_token('change-status-client-request') }}";

            let status = document.createElement("input");
            status.type = "hidden";
            status.name = "status";
            status.value = statusId;

            form.appendChild(token);
            form.appendChild(status);
            document.body.appendChild(form);

            form.submit()

        }
    }
</script>
{% endblock %}


{% block sidebar %}
    {% include 'extra/request_filter.html.twig' %}
{% endblock %}