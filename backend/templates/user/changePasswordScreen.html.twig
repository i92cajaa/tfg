{% extends 'base.html.twig' %}

{% block title %}
	{{'Sign in'|trans }}
{% endblock %}

{% block stylesheets %}
	<style>
		.validation-message {
			display: none; /* Inicialmente oculto */
			color: red; /* Color del mensaje de validación */
			font-size: 14px;
		}

		.valid-input {
			border: 2px solid green; /* Estilo del borde cuando es válido */
		}

		.invalid-input {
			border: 2px solid red; /* Estilo del borde cuando es inválido */
		}
	</style>
{% endblock %}

{% block body %}

	<div class="col-12 p-0">
		<div class="login-card">
			<div>
				<div>
					<a class="logo"><img class="img-fluid for-light" width="250px" src="{{ configuration.logo_big ? path('document_render', {'document': configuration.logo_big}) : asset('assets/images/logo/login.png') }}" alt="loginpage"><img width="250px" class="img-fluid for-dark" src="{{ configuration.logo_big ? path('document_render', {'document': configuration.logo_big}) : asset('assets/images/logo/logo.png') }}" alt="looginpage"></a>
				</div>
				<div class="login-main">
					{{ form_start(form) }}
					<h4>{{ 'Recover password'|trans }}</h4>
					
					<p>{{ 'Enter a new password (Remember it must be at least 8 characters long, contain a punctuation mark, and an uppercase letter)'|trans }}</p>

					<div class="form-group">
						<label class="col-form-label">{{ 'Password'|trans }}</label>
						<div class="form-input position-relative">
							<input class="form-control" placeholder="" name="{{ field_name(form.password.first) }}" id="password" type="password" value="{{ field_value(form.password.first) }}" required onblur="validatePassword()">
							<div class="show-hide">
								<i class="password-icon"></i>
							</div>
							<div class="validation-message" id="password-validation-message"></div>
						</div>
					</div>
					<div class="form-group">
						<label class="col-form-label">{{ 'RepeatPassword'|trans }}</label>
						<div class="form-input position-relative">
							<input class="form-control" placeholder="" name="{{ field_name(form.password.second) }}" id="repeatPassword" type="password" value="{{ field_value(form.password.second) }}" required onblur="validateRepeatPassword()">
							<div class="show-hide">
								<i class="repeat-password-icon"></i>
							</div>
							<div class="validation-message" id="repeat-password-validation-message"></div>
						</div>
					</div>

					<div class="form-group mb-0">
						{#                            <div class="checkbox p-0">#}
						{#                                <input id="checkbox1" type="checkbox">#}
						{#                                <label class="text-muted" for="checkbox1">{{ 'Remember password'|trans }}</label>#}
						{#                            </div>#}
						{#
																																									                            <a class="link" href="forget-password.html">Forgot password?</a>
																																									                            #}
						<input type="hidden" name="_token" value="{{ csrf_token('chage-password' ~ '1ee6cd67-4d7e-6040-8eff-5d0608d0d857') }}"> <div class="text-end mt-4">
							<button class="btn btn-primary btn-block w-100" type="submit" id="submitButton" {% if isPasswordValid and isRepeatPasswordValid %} {% else %} disabled {% endif %}>{{ 'ModifyPass'|trans }}</button>

						</div>


					</div>
					{{ form_end(form) }}

					{% for flashMessage in app.flashes('success') %}
                         <div class="alert alert-success" style="position: fixed; top: 20px; right: 20px;">
                            {{ flashMessage }}
                         </div>
                    {% endfor%}

				</div>
			</div>

		</div>
	</div>
</div>

{% endblock %}{% block javascripts %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        setTimeout(function () {
            var successAlerts = document.querySelectorAll('.alert-success');
            successAlerts.forEach(function (alert) {
                alert.style.display = 'none';
            });
        }, 2000); 
    });
</script>
<script>
	const passwordInput = document.getElementById('password');
const repeatPasswordInput = document.getElementById('repeatPassword');
const passwordIcon = document.querySelector('.password-icon');
const repeatPasswordIcon = document.querySelector('.repeat-password-icon');
const submitButton = document.getElementById('submitButton');

let isPasswordValid = false;
let isRepeatPasswordValid = false;

passwordInput.addEventListener('blur', validatePassword, true);
repeatPasswordInput.addEventListener('blur', validateRepeatPassword, true);

function validatePassword() {
const password = passwordInput.value;
const hasUpperCase = /[A-Z]/.test(password);
const hasNumber = /\d/.test(password);
const hasPunctuation = /[!@#$%^&*()_+{}\[\]:;<>,.?~\\-]/.test(password);

const passwordValidationMessage = document.getElementById('password-validation-message');

if (password.length >= 8 && hasUpperCase && hasNumber && hasPunctuation) {
passwordInput.classList.remove('invalid-input');
passwordInput.classList.add('valid-input');
passwordValidationMessage.style.display = 'none';
isPasswordValid = true;
} else {
passwordInput.classList.remove('valid-input');
passwordInput.classList.add('invalid-input');
passwordValidationMessage.style.display = 'block';
passwordValidationMessage.textContent = 'Contraseña inválida'; // Mensaje de validación
isPasswordValid = false;
} updateSubmitButton();
}

function validateRepeatPassword() {
const password = passwordInput.value;
const repeatPassword = repeatPasswordInput.value;

const repeatPasswordValidationMessage = document.getElementById('repeat-password-validation-message');

if (repeatPassword == password) {
repeatPasswordInput.classList.remove('invalid-input');
repeatPasswordInput.classList.add('valid-input');
repeatPasswordValidationMessage.style.display = 'none';
isRepeatPasswordValid = true;

} else {
repeatPasswordInput.classList.remove('valid-input');
repeatPasswordInput.classList.add('invalid-input');
repeatPasswordValidationMessage.style.display = 'block';
repeatPasswordValidationMessage.textContent = 'Contraseñas distintas'; // Mensaje de validación
isRepeatPasswordValid = false;

} updateSubmitButton();
}

function updateSubmitButton() {
submitButton.disabled = !(isPasswordValid && isRepeatPasswordValid);
}
</script>{% endblock %}
