{% extends 'base-admin.html.twig' %}

{% block title %}Mostrar Mentoría{% endblock %}

{% block page_title %}Mostrar Mentoría{% endblock %}

{% block body %}
    {% set appointmentService = '' %}

    {% if userPermission.can('create', 'templates') or userPermission.can('edit', 'templates') %}
        <div class="modal fade" id="templateModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
                <div class="modal-content" id="templateModalContent" >

                </div>
            </div>
        </div>
    {% endif %}

    {% if configuration.payment and userPermission.can('manage_payments', 'appointments') %}
        <div class="modal fade" id="paymentModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
                <div class="modal-content" id="paymentModalContent" >

                </div>
            </div>
        </div>
    {% endif %}
    <div class="container-fluid">
        <ul class="nav nav-pills pl-2" role="tablist">
            <li class="nav-item d-flex">
                <a class="nav-link d-flex align-items-center active" id="info-tab" data-bs-toggle="tab"
                   href="#info" aria-controls="account" role="tab" aria-selected="true">
                    <i data-feather="user"></i>{{ 'Info'|trans }}
                </a>
            </li>
        </ul>


        <div class="tab-content">
            <div class="tab-pane active row" id="info" aria-labelledby="info-tab" role="tabpanel">

                <div class="col-12">
                    <div class="row invoice-preview">
                        <!-- Info -->
                        <div class="col-xl-12 col-md-12 col-12">
                            <div class="card invoice-preview-card">
                                <div class="card-body invoice-padding pb-0">
                                    <!-- Header starts -->
                                    <div class="d-flex row invoice-spacing mt-0">
                                        <div class="card-title d-flex align-items-center col-12">
                                            {% if appointment.statusType != null %}
                                                <span class = "badge text-capitalize" style="background-color: {{ appointment.statusType.color }} !important;"> {{ appointment.statusType.name|trans }} </span> 
                                                <span class = "ms-2 me-2 fw-bold d-flex align-items-center">( <i data-feather="calendar" class="mx-1 d-none d-md-block" style="width: 15px"></i>{{ appointment.timeFrom ? appointment.timeFrom|UTCDateTimeFormat('d-m-Y') : '' }} |  <i data-feather="clock" class="mx-1 d-none d-md-block" style="width: 15px"></i>{{ appointment.timeFrom ? appointment.timeFrom|UTCDateTimeFormat('H:i') }} - {{ appointment.timeTo ? appointment.timeTo|UTCDateTimeFormat('H:i') }})</span>
                                                {% if appointment.services is not null %}{% for service in appointment.services %}{% set appointmentService = service.name %}<span class="fs-5 ms-1">{{ service.name }} {% if appointment.area is not null %}-{% endif %} {{ appointment.area.name ?? '' }}</span>{% if loop.index != appointment.services|length %}, {% endif %}{% endfor %}{% endif %}
                                                
                                            {% endif %}
                                        </div>
                                        {% if not appointment.service.forAdmin or appointment.service.name == "Diagnóstico" %}
                                        <div class="col-12 mt-3">

                                            <h5 class="pb-1">{% if appointment.service.forClient %} Datos de los proyectos {% else %} Datos del proyecto {% endif %}</h5>
                                            <hr>
                                            <div class="row">
                                                {% if appointment.service.forClient %}
                                                    {% for entity in appointment.clients %}
                                                        <div class="col-12 col-md-4 mb-1"><span class="fw-bold">Startup: </span>{% if not user.isProject %}<a href="{{ path('client_show', {'client':entity.id}) }}">{% endif %}{{ entity.name }} {% if entity.alumni %} (Alumni){% endif %}{% if not user.isProject %}</a> {% endif %}</div>
                                                    {% endfor %}
                                                {% else %}
                                                    {% if appointment.client is not null %}
                                                        <div class="col-12 col-md-4 mb-1"><span class="fw-bold">Startup: </span><a href="{{ path('client_show', {'client':appointment.client.id}) }}">{{ appointment.client.name }} {% if appointment.client.alumni %} (Alumni){% endif %}</a></div>
                                                        <div class="col-12 col-md-4 mb-1"><span class="fw-bold">Hub: </span>{{ appointment.client.center.name }}</div>
                                                        <div class="col-12 col-md-4 mb-1"><span class="fw-bold">Representante: </span>{{ appointment.client.representative }}</div>
                                                        <div class="col-12 col-md-4 mb-1"><span class="fw-bold">Teléfono: </span>{{ appointment.client.phone }}</div>
                                                        <div class="col-12 col-md-4 mb-1"><span class="fw-bold">Correo Electrónico: </span>{{ appointment.client.email }}</div>
                                                    {% endif %}
                                                {% endif %}
                                            </div>

                                        </div>
                                        {% endif %}
                                        <div class="col-12 mt-5">
                                            <h5 class="pb-1">Datos del Mentor</h5>
                                            <hr>
                                            <div class="row">
                                                {% for entity in appointment.users %}
                                                    <div class="col-12 col-md-5 mb-1"><span class="fw-bold">Nombre: </span> {% if userPermission.can('show', 'users') %} <a href="{{ path('user_show', {'user':entity.id}) }}">{{ entity.name }} {{ entity.surnames }}</a> {% else %} {{ entity.name }} {{ entity.surnames }} {% endif %}</div>
                                                    {# <span class="ms-5 fw-bold">Teléfono: </span>{{ appointment.user.phone }} #}
                                                    <div class="col-12 col-md-5 mb-1"><span class="fw-bold">Correo Electrónico: </span>{{ entity.email }}</div>
                                                    <br>
                                                {% endfor %}
                                            </div>
                                        </div>
                                        


                                    </div>
                                    <!-- Header ends -->
                                </div>

                                

                                <!-- Invoice Note starts -->
                                <div class="card-body invoice-padding pt-0 text-end border-top-0">


                                    {% if userPermission.can('delete', 'appointments') %}
                                        {% if periodic %}
                                            {% if prev > 0 %}
                                                <a class="deletePrevAppointments" data-id="{{ appointment.id }}"><button class="btn btn-outline-danger">
                                                    {{ 'Delete Previous'|trans }}</button></a>
                                                <form method="post" id="deletePrevAppointments" action="{{ path('appointment_delete_periodic', {'appointment': appointment.id}) }}" class=" deleteForm d-none">
                                                    <input type="hidden" name="_method" value="DELETE">
                                                    <input type="hidden" name="_token" value="{{ csrf_token('delete') }}">
                                                    <input type="hidden" name="operator" value="prev">
                                                </form>
                                            {% endif %}
                                            <a class="btn btn-outline-danger" onclick="$('#deleteForm_appointment_{{ appointment.id }}').submit()">{{ 'Delete'|trans }}</a>
                                            <form method="post" id="deleteForm_appointment_{{ appointment.id }}" action="{{ path('appointment_delete', {'appointment': appointment.id}) }}" class="deleteForm d-none">
                                                <input type="hidden" name="_method" value="DELETE">
                                                <input type="hidden" name="_token" value="{{ csrf_token('delete') }}">
                                                <input type="hidden" name="route" value="{{ path('appointment_list') }}">
                                            </form>
                                            {% if next > 0 %}
                                                <a class="deleteNextAppointments" data-id="{{ appointment.id }}"><button class="btn btn-outline-danger">{{ 'Delete Next'|trans }}</button></a>
                                                <form method="post" id="deleteNextAppointments" action="{{ path('appointment_delete_periodic', {'appointment': appointment.id}) }}" class="deleteForm d-none">
                                                    <input type="hidden" name="_method" value="DELETE">
                                                    <input type="hidden" name="_token" value="{{ csrf_token('delete') }}">
                                                    <input type="hidden" name="operator" value="next">
                                                </form>
                                            {% endif %}
                                        {% else %}
                                            <a class="btn btn-outline-danger" onclick="$('#deleteForm_appointment_{{ appointment.id }}').submit()">{{ 'Delete'|trans }}</a>
                                            <form method="post" id="deleteForm_appointment_{{ appointment.id }}" action="{{ path('appointment_delete', {'appointment': appointment.id}) }}" class="deleteForm d-none">
                                                <input type="hidden" name="_method" value="DELETE">
                                                <input type="hidden" name="_token" value="{{ csrf_token('delete') }}">
                                                <input type="hidden" name="route" value="{{ path('appointment_list') }}">
                                            </form>
                                        {% endif %}
                                    {% endif %}
                                </div>
                                <!-- Invoice Note ends -->
                            </div>
                        </div>
                        <!-- /Info -->
                        <!-- Report -->
                        {% if not  user.isProject or not appointment.service.forClient%}
{#                        {% else %}#}
                        <div class="col-xl-12 col-md-12 col-12">
                            <div class="card invoice-preview-card">
                                <div class="card-body invoice-padding pb-0">
                                    <!-- Header starts -->
                                    <div class="d-flex row invoice-spacing mt-0">
                                        <div class="col-12 mt-1" style="padding-bottom: 40px">
                                            <h5 class="pb-1">Acta</h5>
                                            <hr>
                                            {% if not dateReport %}
                                                {% if not appointment.report and not user.isProject %}
                                                    <div class="text-start d-flex align-items-center">
                                                        <div class="me-3" style="width: 250px">Acta Generada:</div> <a class="btn btn-primary report mb-2" data-value="{{ appointmentService }}" style="width: 350px"><i class="align-items-center me-2" data-feather='edit-3' style="width: 20px"></i>Crear Acta</a>
                                                    </div>
                                                {% elseif appointment.report and not user.isProject%}
                                                    <div class="text-start d-flex align-items-center mt-2">
                                                        <div class="me-3" style="width: 250px">Acta Generada: </div><a class="btn btn-primary align-items-center" style="width: 350px" href="{{ path('document_download', {'documentId': appointment.report.id}) }}" data-value="report" data-value2="Report"><i class="align-items-center me-2" data-feather='download' style="width: 20px"></i><span class="align-items-center">Descargar</span></a>
                                                        {% if app.user.isAdmin %}
                                                            <a class="ms-2 btn btn-primary report" data-value="{{ appointmentService }}" style="width: 350px"><i class="align-items-center me-2" data-feather='edit-3' style="width: 20px"></i>Crear Acta</a>
                                                        {% endif %}
                                                    </div>
                                                {% elseif not appointment.reportSignMentor %}
                                                    <div class="text-center">
                                                            <h5>Espere a que el mentor genere el acta.</h5>
                                                        </div>
                                                    </div>
                                                {% endif %}

                                        {% if not appointment.photo and not user.isProject %}
                                            <div class="text-start mt-2 d-flex align-items-center">
                                                <div class="me-3" style="width: 250px">Acta/Foto:</div><a class="btn btn-primary upload-photo" style="width: 350px" data-value="photo"><i class="align-items-center me-2" data-feather='upload' style="width: 20px"></i>Subir Foto</a>
                                            </div>
                                        {% else %}
                                            <div class="text-start mt-2 d-flex align-items-center">
                                                <div class="me-3" style="width: 250px">Acta/Foto:</div><a class="btn btn-primary align-items-center" style="width: 350px" href="{{ path('document_download', {'documentId': appointment.photo.id}) }}" data-value="photo" data-value2="Photo"><i class="align-items-center me-2" data-feather='download' style="width: 20px"></i><span class="align-items-center">Descargar Foto</span></a>
                                                {% if app.user.isAdmin %}
                                                    <a class="ms-2 btn btn-primary upload-photo" style="width: 350px" data-value="photo"><i class="align-items-center me-2" data-feather='upload' style="width: 20px"></i>Subir Acta/Foto</a>
                                                {% endif %}
                                            </div>
                                        {% endif %}

                                                {% if appointment.report and not user.isProject %}
                                                    {% if not appointment.reportSignMentor %}
                                                        <div class="text-start mt-2 d-flex align-items-center">
                                                            <div class="me-3" style="width: 250px">Acta Firmada: </div><a class="btn btn-primary upload-document" style="width: 350px" data-value="reportSignMentor"><i class="align-items-center me-2" data-feather='upload' style="width: 20px"></i>Subir Acta Firmada {% if appointment.service.forClient or appointment.service.name == "Diagnóstico" %}(Director){% else %}(Mentor){% endif %}</a>
                                                        </div>
                                                    {% endif %}
                                                    {% if appointment.reportSignMentor %}
                                                        <div class="text-start mt-2 d-flex align-items-center">
                                                            <div class="me-3" style="width: 250px">Acta Firmada {% if appointment.service.forClient or appointment.service.name == "Diagnóstico" %}(Director){% else %}(Mentor){% endif %}:</div>
                                                            <a class="btn btn-primary" href="{{ path('document_download', {'documentId': appointment.reportSignMentor.id}) }}" style="width: 350px" data-value="report" data-value2="Report"><i class="align-items-center me-2" data-feather='download' style="width: 20px"></i><span class="align-items-center">Descargar</span></a>
                                                            {% if app.user.isAdmin %}
                                                                <a class="ms-2 btn btn-primary upload-document" style="width: 350px" data-value="reportSignMentor"><i class="align-items-center me-2" data-feather='upload' style="width: 20px"></i>Subir Acta Firmada {% if appointment.service.forClient or appointment.service.name == "Diagnóstico" %}(Director){% else %}(Mentor){% endif %}</a>
                                                            {% endif %}
                                                        </div>
                                                    {% endif %}
                                                {% endif %}

                                                {% if appointment.reportSignMentor and not appointment.service.forAdmin %}
                                                    {% if not appointment.reportSignProject %}
                                                        <div class="text-start mt-2 mb-3">
                                                            {% if user.isProject %}
                                                            <div class="text-start d-flex align-items-center">
                                                                <span>Descargar Acta</span>
                                                                <a class="btn btn-primary" href="{{ path('document_download', {'documentId': appointment.reportSignMentor.id}) }}" data-value="report" data-value2="Report" style="width: 350px"><i class="align-items-center me-2" data-feather='download' style="width: 20px"></i><span class="align-items-center">Descargar Acta</span></a><br>
                                                            </div>
                                                            {% endif %}
                                                            <div class="text-start d-flex align-items-center">
                                                                <div class="me-3" style="width: 250px">Acta Firmada {% if appointment.service.forClient %}(Mentor){% else %}(Proyecto){% endif %}:</div>
                                                            <a class="btn btn-primary upload-document" data-value="reportSignProject" style="width: 350px"><i class="align-items-center me-2" data-feather='upload' style="width: 20px"></i>Subir Acta Firmada {% if appointment.service.forClient %}(Mentor){% else %}(Proyecto){% endif %}</a>
                                                            </div>
                                                        </div>
                                                    {% endif %}
                                                    {% if appointment.reportSignProject %}
                                                        <div class="text-start d-flex align-items-center mt-2">
                                                            <div class="me-3" style="width: 250px">Acta Firmada {% if appointment.service.forClient %}(Mentor){% else %}(Proyecto){% endif %}:</div>
                                                            <a class="btn btn-primary" href="{{ path('document_download', {'documentId': appointment.reportSignProject.id}) }}" data-value="report" data-value2="Report" style="width: 350px"><i data-feather='download' class="me-2" style="width: 20px"></i><span class="align-items-center">Descargar</span></a>
                                                            {% if app.user.isAdmin %}
                                                            <a class="btn btn-primary ms-2 upload-document" data-value="reportSignProject" style="width: 350px"><i class="align-items-center me-2" data-feather='upload' style="width: 20px"></i>Subir Acta Firmada {% if appointment.service.forClient %}(Mentor){% else %}(Proyecto){% endif %}</a>
                                                            {% endif %}
                                                        </div>
                                                    {% endif %}
                                                {% endif %}



                                            {% else %}
                                                <div class="text-center mt-5">
                                                    <h5>La creación del acta estará disponible cuando comience la mentoría.</h5>
                                                </div>
                                            {% endif %}

                                        </div>

                                    </div>



                                    <!-- Header ends -->
                                </div>

                            </div>
                        </div>
                        {% endif %}
                    <div class="card invoice-preview-card">
                        <div id="reportContent"></div>
                    </div>

                        <!-- /Report -->
                    </div>

                </div>

            </div>

            <div class="modal fade" id="documentModal" tabindex="-1" role="dialog" aria-labelledby="documentModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="documentModalLabel">Subir Actas</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="documentsForm" action="{{ path('appointment_document', {'appointment': appointment.id}) }}" method="post" enctype="multipart/form-data">
                                <input type="hidden" name="uploadDocument" id="upload-document-type" value="">
                                <div class="row" id="list-documents">


                                    <div class="row col-12" id="document-block-">
                                        <div class="col-md-12">
                                            <div class="">
                                                <div class="row">
                                                    <div class="col-md-12">
                                                        <div class="form-group row">
                                                            <label class="col-2 label-control mt-auto mb-auto text-center font-weight-bolder">Subir archivo *</label>
                                                            <div class="col-10">
                                                                <input name="document" required id="documents_document" class="form-control" type="file">
                                                                <span class="text-danger d-none" id="documents_document_error">Introduce el archivo</span>
                                                            </div>
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>

                            </form>

                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary" onclick="submitForm()">Crear</button>
                        </div>
                    </div>
                </div>
            </div>
        <div class="modal fade" id="photoModal" tabindex="-1" role="dialog" aria-labelledby="photoModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="photoModalLabel">Subir Acta/Foto</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="photoForm" action="{{ path('appointment_photo', {'appointment': appointment.id}) }}" method="post" enctype="multipart/form-data">
                            <input type="hidden" name="uploadDocument" id="upload-photo-type" value="">
                            <div class="row" id="list-documents">


                                <div class="row col-12" id="document-block-">
                                    <div class="col-md-12">
                                        <div class="">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="form-group row">
                                                        <label class="col-2 label-control mt-auto mb-auto text-center font-weight-bolder">Subir Acta/Foto *</label>
                                                        <div class="col-10">
                                                            <input name="document" required id="documents_photo" class="form-control" type="file">
                                                            <span class="text-danger d-none" id="documents_photo_error">Introduce el archivo</span>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>

                        </form>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" onclick="submitFormPhoto()">Crear</button>
                    </div>
                </div>
            </div>
        </div>
            <div class="tab-pane row" id="template" aria-labelledby="template-tab" role="tabpanel">
                <div class="col-12">


                    <div class="card">
                        <div class="card-header">
                            <div class="row">

                                <div class="col-md-9 col-sm-12">
                                    <ul class="nav nav-pills">
                                        {% for templateType in templateTypes %}
                                            <li class="nav-item">
                                                <a class="nav-link {% if loop.first %}active{% endif %}" data-bs-toggle="tab"
                                                   href="#template-type-{{ templateType.id }}" aria-controls="account" role="tab" aria-selected="true">
                                                    {{ templateType.name }}
                                                </a>
                                            </li>

                                        {% endfor %}

                                    </ul>
                                </div>
                                <div class="col-md-3 col-sm-12 text-end">
                                    {% if userPermission.can('export', 'templates') %} {# and (app.user == appointment.users[0] or app.user.isSuperAdmin()) #}
                                        <button class="btn add-new btn-secondary mr-1" type="button" onclick="exportTemplates()"><span class="text-white">{{ 'Export'|trans }}</span></button>
                                    {% endif %}
                                    {% if userPermission.can('create', 'templates') %}
                                        <a><button class="btn add-new btn-primary" type="button" onclick="openCreateModal()"><span class="text-white">{{ 'Create Template'|trans }}</span></button></a>
                                    {% endif %}
                                </div>

                            </div>


                        </div>
                        <div class="tab-content">
                            {% for templateType in templateTypes %}
                                <div class="tab-pane fade {% if loop.first %}show active {% endif %}" id="template-type-{{ templateType.id }}" role="tabpanel" aria-labelledby="home-tab">
                                    <div class="table-responsive overflow-inherit">

                                        <table class="table table-striped table-borderless">
                                            <thead class="thead-light">
                                            <tr>
                                                <th class="text-truncate">
                                                    <a>
                                                        {{ 'Date'|trans }}
                                                    </a>
                                                </th>
                                                {% for templateTypeLine in templateType.templateLineTypes %}
                                                    <th>
                                                        <a>
                                                            {{ templateTypeLine.name }}
                                                        </a>
                                                    </th>
                                                {% endfor %}

                                                <th>
                                                    <a>
                                                        {{ 'Actions'|trans }}
                                                    </a>
                                                </th>
                                            </tr>
                                            </thead>
                                            <tbody>
                                            {% for template in appointment.getTemplatesByTemplateType(templateType) %}
                                                <td>
                                                    {{ template.createdAt ? template.createdAt|UTCDateTimeFormat('d-m-Y H:i') : '' }}
                                                </td>
                                                <tr>
                                                    {% for templateTypeLine in templateType.templateLineTypes %}
                                                        <td class="overflow-y-scroll nowrap" style="height: 100px" >
                                                            <a>

                                                                {% include 'template/render_template_value.html.twig' with {'templateLine': template.getTemplateLineByName(templateTypeLine.name)} only %}

                                                            </a>
                                                        </td>
                                                    {% endfor %}

                                                    <td class="overflow-y-scroll">
                                                        <div class="dropdown-basic ">
                                                            <div class="dropdown">
                                                                <button class="dropbtn bg-transparent text-dark p-0 m-0" type="button" data-bs-original-title="" title="">
                                                                    <i data-feather='align-justify'></i>
                                                                </button>
                                                                <div class="dropdown-content " style="top: 20px">

                                                                    {% if userPermission.can('edit', 'templates') %}
                                                                        <a class="dropdown-item" onclick="openEditModal('{{ template.id }}')" data-id="{{ template.id }}"><i data-feather='edit'></i> {{ 'Edit'|trans }}</a>
                                                                    {% endif %}

                                                                    {% if userPermission.can('export', 'templates') %}
                                                                        <a class="dropdown-item" onclick="$('#export_template_{{ template.id }}').submit()"><i data-feather='file-text'></i> {{ 'Export'|trans }}</a>
                                                                        <form method="post" id="export_template_{{ template.id }}" action="{{ path('export_template_pdf') }}" class=" d-none">
                                                                            <input type="hidden" name="_method" value="POST">
                                                                            <input type="hidden" name="template" value="{{ template.id }}">
                                                                        </form>
                                                                    {% endif %}

                                                                    {% if userPermission.can('delete', 'templates') %}
                                                                        <div class="dropdown-divider"></div>
                                                                        <a class="dropdown-item" onclick="$('#deleteForm_template_{{ template.id }}').submit()"><i data-feather='delete'></i> {{ 'Delete'|trans }}</a>
                                                                        <form method="post" id="deleteForm_template_{{ template.id }}" action="{{ path('template_delete', {'template': template.id}) }}" class="deleteForm d-none">
                                                                            <input type="hidden" name="_method" value="DELETE">
                                                                            <input type="hidden" name="_token" value="{{ csrf_token('delete') }}">
                                                                            <input type="hidden" name="route" value="{{ path('appointment_show', {'appointment': appointment.id}) }}">
                                                                            <button class="btn">Delete</button>
                                                                        </form>
                                                                    {% endif %}
                                                                </div>

                                                            </div>
                                                        </div>
                                                    </td>
                                                </tr>
                                            {% endfor %}

                                            </tbody>
                                        </table>

                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                    </div>

                </div>

            </div>

            </div>
    </div>

{% endblock %}

{% block javascripts %}
<script>

    $('.report').on('click', function (e) {
        const selectedRadio = $(this).data('value');
        getReportContent(selectedRadio);
        $('.report').off('click');
    });

    function getReportContent(selectedRadio){
        $.ajax({
            url: "{{ path('appointment_report',{'appointment': appointment.id}) }}?document=" + selectedRadio,
            type: 'get',
            success: function (response) {

                $('#reportContent').html(response);
                $('html, body').animate({
                    scrollTop: $('#reportContent').offset().top
                }, 300);

            },
            error: function(jqXHR, textStatus, errorThrown) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    showConfirmButton: false,
                    timer: 2000
                })
                console.log(textStatus, errorThrown);
            }
        })
    }


    function PopupCenter(url, title, w, h, opts) {
        var _innerOpts = '';
        if (opts !== null && typeof opts === 'object') {
            for (var p in opts) {
                if (opts.hasOwnProperty(p)) {
                    _innerOpts += p + '=' + opts[p] + ',';
                }
            }
        }
        // Fixes dual-screen position, Most browsers, Firefox
        var dualScreenLeft = window.screenLeft != undefined ? window.screenLeft : screen.left;
        var dualScreenTop = window.screenTop != undefined ? window.screenTop : screen.top;

        var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;
        var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;

        var left = ((width / 2) - (w / 2)) + dualScreenLeft;
        var top = ((height / 2) - (h / 2)) + dualScreenTop;
        var newWindow = window.open(url, title, _innerOpts + ' width=' + w + ', height=' + h + ', top=' + top + ', left=' + left);

        var interval = null;


        newWindow.onload = function() {
            // Listen events from newWindow success signature or close
            interval = setInterval(function() {

                let content = newWindow.document.querySelector('body').innerText;

                if (content.includes('Firma realizada correctamente')) {
                    //console.log("Firma realizada");
                    newWindow.close();
                    location.reload();
                    clearInterval(interval)
                }

                if (newWindow.closed) {
                    //console.log("Ventana cerrada");
                    location.reload();
                    clearInterval(interval)
                }
            }, 400);
        }
        // Puts focus on the newWindow
        if (window.focus) {
            newWindow.focus();
        }
    }

    $('.upload-document').on('click', function (e) {
        document.getElementById('upload-document-type').value=$(this).data('value');
        $('#documentModal').modal('show');
    });

    $('.upload-photo').on('click', function (e) {
        document.getElementById('upload-photo-type').value=$(this).data('value');
        $('#photoModal').modal('show');
    });


    function submitForm() {
        // const documentNameInput = document.getElementById("documentName");
        const documentFileInput = document.getElementById("documents_document");

        // if (!documentNameInput.value.trim()) {
        //     document.getElementById("documentNameError").classList.remove("d-none");
        // }

        if (!documentFileInput.value.trim()) {
            document.getElementById("documents_document_error").classList.remove("d-none");
        }

        // Verificar si ambos campos están llenos
        if (documentFileInput.value.trim()) {
            document.getElementById('documentsForm').submit();
        }

    }

    function submitFormPhoto() {
        // const documentNameInput = document.getElementById("documentName");
        const documentFileInput = document.getElementById("documents_photo");

        if (!documentFileInput.value.trim()) {
            document.getElementById("documents_photo_error").classList.remove("d-none");
        }

        // Verificar si ambos campos están llenos
        if (documentFileInput.value.trim()) {
            document.getElementById('photoForm').submit();
        }

    }

    {% if userPermission.can('modify_hour', 'appointments') %}
    async function openModifyHours()
    {

        const { value: formValues } = await Swal.fire({
            title: '{{ 'Modify Hour'|trans }}',
            html: '{{ 'Warning'|trans }}: {{ 'Modification of the schedule for this appointment could cause an overlap in the hours of other appointments'|trans }}.' +
                '<div class="form-group">' +
                '<label class="form-control-label" for="swal-input-date-from">{{ 'Start'|trans }}</label>' +
                '<input type="text" class="form-control" value="{{ appointment.timeFrom|UTCDateTimeFormat('H:i') }}" id="swal-input-date-from">' +
                '</div>' +
                '<div class="form-group">' +
                '<label class="form-control-label" for="swal-input-date-to">{{ 'End'|trans }}</label>' +
                '<input type="text" class="form-control" value="{{ appointment.timeTo|UTCDateTimeFormat('H:i') }}" id="swal-input-date-to">' +
                '</div>'
            ,
            showCancelButton: true,
            confirmButtonText: '{{ 'Next'|trans }}',
            cancelButtonText: '{{ 'Cancel'|trans }}',
            showLoaderOnConfirm: true,
            allowOutsideClick: () => !Swal.isLoading(),
            didOpen: function () {
                $('#swal-input-date-to').flatpickr({
                    locale: locale,
                    noCalendar: true,
                    enableTime: true,
                    dateFormat: 'h:i'
                });

                $('#swal-input-date-from').flatpickr({
                    locale: locale,
                    noCalendar: true,
                    enableTime: true,
                    dateFormat: 'h:i'
                });

            },
            preConfirm: () => {

                return {
                    'timeFrom': $('#swal-input-date-from').val(),
                    'timeTo': $('#swal-input-date-to').val()
                };
            }
        })

        if(formValues) {

            let form = document.createElement('form');

            form.setAttribute('method', "post");
            form.setAttribute('action', "{{ path('modify_hour_appointment', {'appointment': appointment.id}) }}");


            let tokenInput = document.createElement('input')
            tokenInput.type = 'hidden';
            tokenInput.name = '_token';
            tokenInput.value = '{{ csrf_token('modify-hour') }}';

            let timeFromInput = document.createElement('input')
            timeFromInput.type = 'hidden';
            timeFromInput.name = 'from';
            timeFromInput.value = formValues.timeFrom;

            let timeToInput = document.createElement('input')
            timeToInput.type = 'hidden';
            timeToInput.name = 'to';
            timeToInput.value = formValues.timeTo;


            form.appendChild(timeFromInput);
            form.appendChild(timeToInput);
            form.appendChild(tokenInput);



            document.body.appendChild(form);

            form.submit();

        }

    }
    {% endif %}

    {% if userPermission.can('edit', 'appointments') %}
        async function openStatusModal()
        {

            const { value: formValues } = await Swal.fire({
                title: '{{ 'Change Status'|trans }}',
                html: '{{ 'Select the status to which you want to change the appointment'|trans }}' +
                    '<div class="form-group">' +
                    '<label class="form-control-label" for="swal-input-select">{{ 'Status'|trans }}</label>' +
                    '<select class="form-control" id="swal-input-select" name="status">' +
                        {% for status in statuses %}
                    '<option value="{{ status.id }}">{{ status.name|trans }}</option>' +
                        {% endfor %}
                    '</select>' +
                    '</div>'
                ,
                showCancelButton: true,
                confirmButtonText: '{{ 'Next'|trans }}',
                cancelButtonText: '{{ 'Cancel'|trans }}',
                showLoaderOnConfirm: true,
                allowOutsideClick: () => !Swal.isLoading(),
                didOpen: function () {
                    $('#swal-input-select').select2({});

                },
                preConfirm: () => {

                    return {
                        'status': $('#swal-input-select').val()
                    };
                }
            })

            if(formValues) {

                let form = document.createElement('form');

                form.setAttribute('method', "post");
                form.setAttribute('action', "{{ path('change_status_appointment', {'appointment': appointment.id}) }}");

                let statusInput = document.createElement('input')
                statusInput.type = 'hidden';
                statusInput.name = 'status';
                statusInput.value = formValues.status;


                let tokenInput = document.createElement('input')
                tokenInput.type = 'hidden';
                tokenInput.name = '_token';
                tokenInput.value = '{{ csrf_token('change-status') }}';


                form.appendChild(statusInput);
                form.appendChild(tokenInput);



                document.body.appendChild(form);
                console.log(form);
                form.submit();

            }

        }
    {% endif %}

    function instanceDragDrop(){
        $( ".task-draggable" ).draggable({
            revert: "invalid",
            zIndex: 999,
            connectToSortable: ".task-draggable-div"
        })

        $( ".task-draggable-div" ).droppable({
            accept: ".task-draggable",
            drop: function (e, ui) {

                ui.draggable.css('left', 0);
                ui.draggable.css('top', 0);

                console.log(ui.draggable)
                $(this).append(ui.draggable)

                $.ajax({
                    url: '{{ path('task_change_status') }}',
                    type: 'post',
                    dataType: 'json',
                    delay: 250,
                    data: {
                        _token: '{{ csrf_token('change-status-task') }}',
                        id: ui.draggable.data('task-id'), // search term
                        status: $(this).data('task-status')
                    },
                    success: function (response) {
                        Swal.fire(
                            '{{ 'Task Updated'|trans }}',
                            '{{ 'Task status has been changed successfully'|trans }}',
                            'success'
                        )

                        $.ajax({
                            url: '{{ path('task_schema_get') }}',
                            type: 'post',
                            dataType: 'json',
                            delay: 250,
                            data: {
                                _token: '{{ csrf_token('get-task-schema-template') }}',
                                appointment: '{{ appointment.id }}',
                                client: null
                            },
                            success: function (response) {
                                if(response.success){

                                    $('#task-schema').html(response.data);

                                    if (feather) {
                                        feather.replace({
                                            width: 14,
                                            height: 14
                                        });
                                    }

                                    instanceDragDrop()

                                }
                            },
                            error: function(jqXHR, textStatus, errorThrown) {
                                console.log(textStatus, errorThrown);
                            }
                        })

                    }
                })

            }
        });
    }

    $(function(){
        instanceDragDrop()

    });

    flatpickr('#created_at', {
        locale: locale,
        enableTime: true,
        dateFormat: "d-m-Y H:i",
        allowInput: true
    })


    {% if userPermission.can('export', 'templates') %}
    async function exportTemplates()
    {

        const { value: formValues } = await Swal.fire({
            title: '{{ 'Export Templates'|trans }}',
            html: '<p>{{ 'Select the template types to be exported'|trans }}.</p>' +
                '<div class="form-group m-t-10">' +
                '<label class="form-control-label" for="swal-input-select">{{ 'Template Types'|trans }}</label>' +
                '<select class="form-control" id="swal-input-select" multiple name="type[]">' +
                    {% for templateType in templateTypes %}
                '<option value="{{ templateType.id }}">{{ templateType.name }}</option>' +
                    {% endfor %}
                '</select>' +
                '</div>' +
                '<div class="form-group m-t-10">' +
                '<label class="form-control-label" for="swal-input-date">{{ 'Dates'|trans }}</label>' +
                '<input type="text" class="form-control" id="swal-input-date">' +
                '</div>'
            ,
            showCancelButton: true,
            confirmButtonText: '{{ 'Next'|trans }}',
            cancelButtonText: '{{ 'Cancel'|trans }}',
            showLoaderOnConfirm: true,
            allowOutsideClick: () => !Swal.isLoading(),
            didOpen: function () {
                $('#swal-input-select').select2({});

                flatpickr('#swal-input-date',{
                    locale: locale,
                    mode: "range",
                    dateFormat: "d-m-Y",
                })
            },
            preConfirm: () => {

                return {
                    'types': $('#swal-input-select').val(),
                    'dateRange': $('#swal-input-date').val()
                };
            }
        })

        if(formValues) {

            let form = document.createElement('form');

            form.setAttribute('method', "post");
            form.setAttribute('action', "{{ path('export_template_pdf') }}");

            let appointmentInput = document.createElement('input')
            appointmentInput.type = 'hidden';
            appointmentInput.name = 'appointment';
            appointmentInput.value = '{{ appointment.id }}';

            let dateRangeInput = document.createElement('input')
            dateRangeInput.type = 'hidden';
            dateRangeInput.name = 'date_range';
            dateRangeInput.value = formValues.dateRange;

            for( let i = 0; i < formValues.types.length; i++ ) {
                let typesInput = document.createElement('input')
                typesInput.type = 'hidden';
                typesInput.name = `types[]`;
                typesInput.value = formValues.types[i];

                form.appendChild(typesInput);
            }


            form.appendChild(appointmentInput);
            form.appendChild(dateRangeInput);



            document.body.appendChild(form);

            form.submit();

        }

    }
    {% endif %}

    {% if configuration.payment and userPermission.can('manage_payments', 'appointments') %}
        async function openCreatePaymentModal(){
            $.ajax({
                url: '{{ path('payment_get_create_template') }}',
                type: 'post',
                dataType: 'json',
                delay: 250,
                data: {
                    _token: '{{ csrf_token('get-create-payment-template') }}',
                    appointment: '{{ appointment.id }}',
                },
                success: function (response) {
                    if (response.success) {

                        $('#paymentModalContent').html(response.data);

                        if (feather) {
                            feather.replace({
                                width: 14,
                                height: 14
                            });
                        }

                        $('#paymentModal').modal('show');

                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: response.message,
                            showConfirmButton: false,
                            timer: 2000
                        })
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(textStatus, errorThrown);
                }
            })
        }

    function openEditPaymentModal(id){

        $.ajax({
            url: '{{ path('payment_get_edit_template') }}',
            type: 'post',
            dataType: 'json',
            delay: 250,
            data: {
                _token: '{{ csrf_token('get-edit-payment-template') }}',
                payment: id, // search term
            },
            success: function (response) {
                if(response.success){

                    $('#paymentModalContent').html(response.data);

                    if (feather) {
                        feather.replace({
                            width: 14,
                            height: 14
                        });
                    }

                    $('#paymentModal').modal('show');

                }else{
                    Swal.fire({
                        icon: 'error',
                        title: response.message,
                        showConfirmButton: false,
                        timer: 2000
                    })
                }
            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.log(textStatus, errorThrown);
            }
        })

    }
    {% endif %}

    {% if userPermission.can('create', 'templates') %}
    async function openCreateModal()
    {
        const { value: templateType } = await Swal.fire({
            title: '{{ 'Create Template'|trans }}',
            html: '{{ 'Select the template you want to create'|trans }}.' +
                '<select class="form-control" id="swal-input-select">' +
                    {% for templateType in templateTypes %}
                '   <option value="{{ templateType.id }}">{{ templateType.name }}</option>' +
                    {% endfor %}
                '</select>',
            showCancelButton: true,
            confirmButtonText: '{{ 'Next'|trans }}',
            cancelButtonText: '{{ 'Cancel'|trans }}',
            showLoaderOnConfirm: true,
            allowOutsideClick: () => !Swal.isLoading(),
            didOpen: function () {
                $('#swal-input-select').select2({});
            },
            preConfirm: () => {

                return $('#swal-input-select').val();
            }
        })

        if(templateType) {
            let client = null;
            {% if appointment.client is not null %}
             client = '{{ appointment.client.id }}'
            {% endif %}
            $.ajax({
                url: '{{ path('template_get_create_template') }}',
                type: 'post',
                dataType: 'json',
                delay: 250,
                data: {
                    _token: '{{ csrf_token('get-create-template-template') }}',
                    templateType: templateType,
                    client: client,
                    appointment: '{{ appointment.id }}',
                },
                success: function (response) {
                    if (response.success) {

                        $('#templateModalContent').html(response.data);

                        if (feather) {
                            feather.replace({
                                width: 14,
                                height: 14
                            });
                        }

                        $('#templateModal').modal('show');

                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: response.message,
                            showConfirmButton: false,
                            timer: 2000
                        })
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(textStatus, errorThrown);
                }
            })
        }

    }
    {% endif %}

    {% if userPermission.can('edit', 'templates') %}
    function openEditModal(id){

        $.ajax({
            url: '{{ path('template_get_edit_template') }}',
            type: 'post',
            dataType: 'json',
            delay: 250,
            data: {
                _token: '{{ csrf_token('get-edit-template-template') }}',
                template: id, // search term
            },
            success: function (response) {
                if(response.success){

                    $('#templateModalContent').html(response.data);

                    if (feather) {
                        feather.replace({
                            width: 14,
                            height: 14
                        });
                    }

                    $('#templateModal').modal('show');

                }else{
                    Swal.fire({
                        icon: 'error',
                        title: response.message,
                        showConfirmButton: false,
                        timer: 2000
                    })
                }
            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.log(textStatus, errorThrown);
            }
        })

    }
    {% endif %}
</script>
{% endblock %}


{% block action_buttons %}

    <li class="level-menu outside">

        <a class="nav-link cursor-pointer" href="{{ userPermission.can('list', 'appointments') ? path('appointment_list') : '#' }}"  >
            <i class="ficon" data-feather="chevron-left"></i>
        </a>
    </li>

    {% if userPermission.can('edit', 'appointments') %}
        <li class="level-menu outside ms-2">
            <div class="d-none d-md-block">
                <a href="{{ path('appointment_edit', {'appointment': appointment.id}) }}" class="btn btn-primary">{{ 'Edit'|trans }}</a>
            </div>
            <div class="d-block d-md-none">
                <a href="{{ path('appointment_edit', {'appointment': appointment.id}) }}" class="nav-link"><i data-feather="edit" style="width: 16px"></i></a>
            </div>
        </li>


        <li>
            <div class="d-none d-md-block">
            <a class="mr-1" onclick="openStatusModal()"><button class="btn btn-primary">{{ 'Change Status'|trans }}</button></a>
            </div>
            <div class="d-block d-md-none">
                <a onclick="openStatusModal()"  class="nav-link"><i data-feather="save" style="width: 16px"></i></a>
            </div>
        </li>

    {% endif %}

    {# {% if userPermission.can('modify_hour', 'appointments') %}
        <li>
            <a class="mr-1" onclick="openModifyHours()"><button class="btn btn-outline-secondary">{{ 'Modify Hour'|trans }}</button></a>
        </li>
    {% endif %} #}


{% endblock %}